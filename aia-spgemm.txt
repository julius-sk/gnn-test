AIA-Range2 Application in SpGEMM
The AIA-range2 technique effectively addresses the fundamental challenge of irregular memory access patterns inherent in SpGEMM operations by transforming the two-level indirection problem into optimized sequential data streams. In SpGEMM, computing the result matrix C = A Ã— B requires accessing matrix B's rows corresponding to the non-zero column indices in each row of matrix A, creating a complex indirect access pattern. As illustrated in the diagram, the AIA system maps GPU block IDs to matrix rows through load-balanced binning, where each bin groups rows with similar computational complexity. For block i processing row j, the AIA-range2 function computes aia_1[2i] = a_row_ptr[d_map[i]] and aia_1[2i+1] = a_row_ptr[d_map[i]+1] to define the range of non-zero elements in matrix A, while aia_2[2j] = b_row_ptr[d_acol[j]] and aia_2[2j+1] = b_row_ptr[d_acol[j]+1] define the corresponding ranges in matrix B. This approach enables the GPU cores to efficiently gather the required data from HBM in a more predictable pattern, significantly improving cache utilization and reducing memory latency. The binning strategy further enhances load balancing by ensuring that threads within the same block process rows with similar sparsity characteristics, while the ranged indirect access mechanism converts the traditionally irregular SpGEMM memory access patterns into optimized sequential streams that better match the GPU's memory hierarchy design.
